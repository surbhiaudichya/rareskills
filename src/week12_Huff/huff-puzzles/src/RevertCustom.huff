
/**
 *  REVERT_CUSTOM HUFF EXERCISE
 *
 *
 *  When a transaction is being executed within a smart contract, based on the logic of that contract, it can revert if a preset condition is not met.
 *  They're 2 main ways to revert in solidity, 
 *  - using a string error message e,g (`require(x != 0, "Only values above 0");`)
 *  - reverting with a custom error e.g (`if(x == 0) revert OnlyValuesAbove0();`)
 *
 *  The task is to write within the `MAIN` macro below, huff code that reverts (all the time) with the custom error `OnlyHuff()`
*/

#define error OnlyHuff()

#define macro MAIN() = takes(0) returns(0) {
    __ERROR(OnlyHuff)          // [custom_error_code_selector]
    0x00                       // [0x00, custom_error_code_selector] 
    mstore                     // save word to memory
    0x20 0x00 revert           // Halt execution reverting state changes but returning data and remaining gas
}
